package com.hongbao.api.consts;

import com.hongbao.api.config.Config;
import com.wujie.common.security.rsa.RSAEncryption;
import com.wujie.common.security.rsa.RSAKeyPair;

import java.util.HashMap;
import java.util.Map;

/**
 * Created by wuqiang on 15-8-7.
 * <p/>
 * 用于管理RSA秘钥对
 *
 * @author wuqiang
 */
public class RsaKeyPairHolder {
    private RsaKeyPairHolder() {
    }

    /**
     * RSA分段
     *
     */
    public static final byte[] PART_SPLIT = "#RSAPART#".getBytes();
    public static final int KEY_SIZE = 2048;
    private static final Map<String, RSAKeyPair> versionRsaKeyPairsMap = new HashMap<String, RSAKeyPair>();

    static {
        RSAKeyPair v100 = null;
        if (Config.isDevModel()) {
            // 开发环境和沙箱环境, 使用测试密钥
            v100 = new RSAKeyPair(
                    //publicKey
                    new byte[]{48, -126, 1, 34, 48, 13, 6, 9, 42, -122, 72, -122, -9, 13, 1, 1, 1, 5, 0, 3, -126, 1, 15, 0, 48, -126, 1, 10, 2, -126, 1, 1, 0, -91, 104, -6, -17, 32, -19, -5, 114, -59, -72, 90, 64, -61, 98, 106, -86, 34, 34, -124, 51, -32, 86, 43, 2, -93, 31, -98, 59, -104, 64, 31, 9, -1, 60, 7, 92, -126, 54, 84, -48, 18, -39, -122, 112, 40, -116, -60, 28, 83, -96, 19, -72, -4, 67, -110, -7, -10, 8, -56, -81, -5, 88, -93, 93, 44, -48, -71, 117, 44, -69, 72, 92, 53, -27, -36, -118, 84, -103, 70, 81, 100, 27, -95, 63, -46, 86, -109, -31, -81, 64, -80, -41, 102, -23, -66, 74, 19, 7, -26, 73, 43, 15, 25, 27, 15, -82, -128, -15, 37, 34, 39, 23, 98, -101, 54, 1, 103, -113, -18, 42, 33, -39, 69, 35, 25, -65, -88, -4, 102, -33, 10, 85, -16, -25, 124, -105, -94, -28, -8, 85, 7, -64, -112, 60, -18, 103, 13, -49, 28, -94, -70, 45, -126, 122, 69, 39, 105, 29, -27, -12, 94, 36, -98, -69, -53, 107, 104, 116, -75, 30, 117, 102, 97, 47, 4, 105, 24, -73, 95, 50, 24, 16, -119, -30, -78, 113, -80, -91, -71, -19, -84, 14, 25, 53, -55, -119, -16, 38, -10, -79, 69, 14, -105, -81, -122, -48, 56, -128, -101, -28, 126, -71, 11, 56, -3, -26, -19, 109, -48, -122, -41, 63, -43, 26, -30, -59, -109, -48, 106, 0, 4, 39, 40, 68, -3, 40, -71, -69, -30, -6, -46, 54, 75, -90, -17, -88, -91, 2, -19, -45, 74, -126, -46, 20, 102, 73, 2, 3, 1, 0, 1},
                    //privateKey
                    new byte[]{48, -126, 4, -67, 2, 1, 0, 48, 13, 6, 9, 42, -122, 72, -122, -9, 13, 1, 1, 1, 5, 0, 4, -126, 4, -89, 48, -126, 4, -93, 2, 1, 0, 2, -126, 1, 1, 0, -91, 104, -6, -17, 32, -19, -5, 114, -59, -72, 90, 64, -61, 98, 106, -86, 34, 34, -124, 51, -32, 86, 43, 2, -93, 31, -98, 59, -104, 64, 31, 9, -1, 60, 7, 92, -126, 54, 84, -48, 18, -39, -122, 112, 40, -116, -60, 28, 83, -96, 19, -72, -4, 67, -110, -7, -10, 8, -56, -81, -5, 88, -93, 93, 44, -48, -71, 117, 44, -69, 72, 92, 53, -27, -36, -118, 84, -103, 70, 81, 100, 27, -95, 63, -46, 86, -109, -31, -81, 64, -80, -41, 102, -23, -66, 74, 19, 7, -26, 73, 43, 15, 25, 27, 15, -82, -128, -15, 37, 34, 39, 23, 98, -101, 54, 1, 103, -113, -18, 42, 33, -39, 69, 35, 25, -65, -88, -4, 102, -33, 10, 85, -16, -25, 124, -105, -94, -28, -8, 85, 7, -64, -112, 60, -18, 103, 13, -49, 28, -94, -70, 45, -126, 122, 69, 39, 105, 29, -27, -12, 94, 36, -98, -69, -53, 107, 104, 116, -75, 30, 117, 102, 97, 47, 4, 105, 24, -73, 95, 50, 24, 16, -119, -30, -78, 113, -80, -91, -71, -19, -84, 14, 25, 53, -55, -119, -16, 38, -10, -79, 69, 14, -105, -81, -122, -48, 56, -128, -101, -28, 126, -71, 11, 56, -3, -26, -19, 109, -48, -122, -41, 63, -43, 26, -30, -59, -109, -48, 106, 0, 4, 39, 40, 68, -3, 40, -71, -69, -30, -6, -46, 54, 75, -90, -17, -88, -91, 2, -19, -45, 74, -126, -46, 20, 102, 73, 2, 3, 1, 0, 1, 2, -126, 1, 0, 58, -29, -2, 123, 70, -55, 19, -2, 15, -31, 11, -39, 4, -9, 52, 44, -80, -116, -125, 111, 8, -49, 4, -17, 34, 110, -82, 98, 95, 89, 108, -13, -99, 56, -99, 18, 85, -107, -52, 106, 108, 91, -97, -34, -84, -63, 57, 77, 48, -124, -52, -96, -50, -57, -84, 59, 108, 90, 66, 65, 77, -122, -120, 91, 51, 10, 121, 12, -5, -55, 14, 1, 46, 123, 81, 34, -70, -19, -5, 56, 29, 33, 45, 46, -48, -49, 92, 69, 60, -91, 22, -111, 10, 37, -20, 70, -23, 49, -91, -50, -91, 18, -14, 8, 77, 115, -2, -102, 92, 115, 37, 97, -47, 12, -101, -108, -78, 111, 111, 6, -9, 24, 40, -30, 79, 87, -118, 109, 6, -83, 25, -13, -110, 100, -60, 40, -53, 114, 48, -10, -95, -80, -120, 1, 71, -50, 93, 66, 77, -38, 92, 52, -110, 60, -107, -56, 15, 118, -12, -86, 75, -63, -42, 22, 27, 87, 52, -96, 11, 124, 62, -107, 84, -29, 65, -62, -8, 61, -32, -114, -123, -128, -27, 12, -95, -62, 22, -33, 98, -48, -114, -122, 56, -11, -42, -72, 64, -44, 98, 79, 99, 63, 93, -65, -33, -62, 104, 18, -112, 48, -83, -113, -9, 25, -113, 109, -84, 69, -55, -24, 45, 83, 40, 39, 3, 84, -59, 104, -17, 92, -110, -110, -57, -85, -111, -39, 47, 106, -108, -113, 118, 70, -107, -80, -81, -63, 96, -66, -90, -111, 90, 4, -121, -69, 62, 1, 2, -127, -127, 0, -20, 116, -6, -12, -3, -31, 81, -69, 0, 34, -47, -112, 87, 26, -96, -65, -43, -52, -89, 115, -12, 82, -113, -80, -14, -15, -28, -124, -90, 102, -8, 28, 63, 43, -86, -43, -10, 56, 59, 28, 24, -97, -8, 1, -103, -22, -102, -8, -92, -19, 11, 93, -103, 80, 90, 70, -21, -77, 86, -21, -25, -10, -30, -62, 27, 24, 68, -28, 74, 56, 25, 53, -97, 72, -23, 12, -60, 52, -117, -32, -98, 107, -43, -61, -74, -86, -62, 42, 117, -4, 38, 80, -81, -48, -54, -33, 49, 84, 8, 123, -111, -95, 68, -84, -92, 104, 30, -107, -61, 2, -76, 42, -111, -49, 76, 112, -7, -100, 92, -18, 20, 57, -42, -90, 27, 60, 119, -119, 2, -127, -127, 0, -77, 20, -59, 99, -47, -16, -24, -50, -121, -40, 98, -25, -48, 90, -78, 26, -51, -62, 69, 21, 57, 46, 30, -40, -79, -8, -121, 97, 94, 4, 101, -28, 126, 7, 97, -49, -50, -29, 72, 76, -14, -126, 22, 118, -128, -40, 91, 72, -113, 64, -1, -109, 43, 109, -115, -118, -101, -96, -41, 74, 90, 48, 22, 81, -34, 59, 48, 87, 35, -12, -24, -78, -50, 122, -65, 11, -16, 110, -17, 28, -12, 30, -14, -77, -57, 94, 18, -63, 56, 118, 72, 46, 72, -19, 36, 99, 55, -20, -76, 1, -98, 4, -124, -77, 46, 63, 102, 72, -56, 47, 57, -11, -52, 82, -117, -41, 114, 110, -96, 24, 94, 82, -102, 70, 101, 50, 8, -63, 2, -127, -127, 0, -20, 49, -115, -36, -37, 29, 15, 62, -12, 75, -45, 121, -109, 8, -114, 58, 17, -98, 116, 70, 103, 111, 113, 9, 24, 36, 120, 87, -24, -64, 66, 102, 52, -45, -79, -70, 56, 80, -62, -6, -75, -66, 85, 69, -124, 49, -52, -53, 66, 51, 102, 127, 0, 126, 59, 47, 76, -111, -65, -23, -75, -77, -17, -98, 100, -30, 65, 46, -88, -44, -112, -103, -9, -102, 36, -15, 19, -84, 73, 108, -3, -46, 73, -99, 78, 2, 20, 33, -59, -23, 49, 124, -73, -94, -96, -125, -126, 10, -90, -50, -120, 17, -57, 63, -116, -102, 84, -78, -44, 49, 7, 54, -34, -97, 107, -124, 14, 82, 26, -95, -42, -94, 79, -65, 108, -59, 97, -63, 2, -127, -128, 18, 11, -87, -56, 97, 67, 113, 114, 62, 102, 35, -79, 80, 97, -109, 72, -8, 42, -9, 99, 40, 27, -23, -89, -44, 103, 66, -35, 32, -24, 56, -116, 73, -42, -36, -104, 96, 52, -82, -8, 114, 7, -127, -45, -9, 47, -42, 34, -3, -84, -125, 20, -123, 111, -56, -81, -118, -9, 46, 58, -93, -45, -20, -85, -37, 69, 3, -98, 4, 85, -115, -115, 87, 25, 47, 95, 56, -97, 53, 33, 41, -56, 100, -108, -111, 38, 125, -91, 82, -41, 56, 118, -47, -118, 115, -4, 59, -118, 114, -87, 39, 15, 53, -128, 8, -51, 2, -75, -102, -42, -121, 116, -87, 94, 56, 17, 65, -54, -69, -1, 56, -94, 2, 65, -51, -72, -71, 1, 2, -127, -128, 26, -48, 22, -117, -83, -4, 100, -96, 91, 49, 74, -91, -93, -85, -102, 111, 123, -75, -44, -22, 26, 4, -48, 39, -53, 12, -76, 49, 32, 46, 51, 72, -63, -55, -6, -5, 57, -17, 108, 125, 119, 77, 76, -97, -117, -106, 98, 28, 100, 9, -43, -115, 93, -43, 86, -86, 18, -105, -18, -79, 6, 28, -73, -6, 53, -119, 72, -18, 9, -126, 55, -9, 92, 60, -49, 117, -51, 113, 84, -23, -8, 116, 71, 35, 50, 93, 109, -36, 98, -83, 35, 100, -69, -86, -115, -35, 44, 38, 72, 119, -83, -99, -122, 111, 49, -120, 43, -8, -116, -88, -39, 126, -71, 13, 73, 10, -69, -3, -78, -55, 119, 100, -49, 92, 71, -97, 49, -90},
                    KEY_SIZE, PART_SPLIT);
        } else {
            // 正式密钥
        }
        /**
         * 把每个版本对应的rsa对象存入这个map
         */
        for (String version : Config.getSupportedVersion()) {
            versionRsaKeyPairsMap.put(version, v100);
        }
    }

    /**
     * 通过版本号，获取RSA秘钥对
     */
    public static RSAKeyPair getKeyPair(String version) {
        return versionRsaKeyPairsMap.get(version);
    }

    public static void main(String[] args) {
        RSAEncryption.generateKeyPairByVersion("1.0.0", PART_SPLIT, KEY_SIZE);
        // 正式环境:公钥
        // MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEArqb97gJrRH+1QDrIDRiPnlsu6QZ67g88tCQS/csxD02d7Dte7zqcvOpE2mInY7le7d8ck9bMb4IuSBDmUXXg6rukSwTX2KnKWz9DhjBCdZQ+25C7fEPoJuxUNzXZqYPTDCkQyv4SxGLldW0j8vPLNMuaGcIOzqbbZbJjHOmMi/MABF0GLIxhHlBgfMZoiIPbCqf9H95/LaYNNgA6iAWbQW9yD/6YEi1mw9kg9HjhCOUZ26C138o2KZUJVsG6vmdyNFItcsv/QqisU/zeRxXQoDTwaUO5bzpYK9Whpb7onXFeiS35PKyWRONl+UWVpg3znS7DXpdDBUIKocLW4DpbOwIDAQAB
    }
}
